<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	
	<select id="getTotalRecord" resultType="int">
		select count(*) from ${tableName01} where tbl = #{tbl}
		<choose>
			<when test="search_option == 'writer_subject_content' ">
				and (id like '%' || #{search_data} || '%' or name like '%'
				|| #{search_data} || '%' or gender like '%'
				|| #{search_data} || '%')
			</when>
			<when test="search_option != null and search_option != '' and search_data != null and search_data != '' ">
					and (${search_option} like '%' ||  #{search_data} || '%' )
			</when>
			<otherwise>
				and no > '0'
			</otherwise>
		</choose>
	</select>
	
	<select id="getListAll" resultType="board.model.dto.BoardDTO">
		select * from (select A.*, Rownum Rnum from (
		
		select t1.*, (select count(*) from ${tableName01} t2 where t2.parentNo = t1.no) child_counter from ${tableName01} t1 where tbl = #{tbl}
		
		<choose>
			<when test="search_option == 'writer_subject_content' ">
				and (id like '%' || #{search_data} || '%' or name like '%'
				|| #{search_data} || '%' or gender like '%'
				|| #{search_data} || '%')
			</when>
			<when test="search_option != null and search_option != '' and search_data != null and search_data != '' ">
					and (${search_option} like '%' ||  #{search_data} || '%' )
			</when>
			<otherwise>
				and no > '0'
			</otherwise>
		</choose>
		
		order by noticeNo desc, refNo desc, levelNo asc
		
		<![CDATA[		
		)A) where Rnum >= #{startRecord} and Rnum <= #{lastRecord}
		]]>	
	
	</select>
	
	<select id="getMaxNoticeNo" resultType="int">
		select nvl(max(noticeNo), 0) from ${tableName01} where tbl = #{tbl}
	</select>
	
	<select id="getMaxNum" resultType="int">
		select nvl(max(num), 0) from ${tableName01} where tbl = #{tbl}
	</select>
	
	<select id="getMaxRefNo" resultType="int">
		select nvl(max(refNo), 0) from ${tableName01} where tbl = #{tbl}
	</select>
	
	<insert id="setInsert">
			<selectKey keyProperty="no" resultType="int" order="BEFORE" >
				select seq_board.nextval from dual
			</selectKey>
		insert into board (no, num, tbl, writer, subject, content, email, passwd, refNo, stepNo, levelNo, parentNo, hit, ip, memberNo, noticeNo, secretGubun, regidate ) 
		values (#{no}, #{dto.num},#{dto.tbl},#{dto.writer},#{dto.subject},#{dto.content},#{dto.email},#{dto.passwd},#{dto.refNo},#{dto.stepNo},#{dto.levelNo},#{dto.parentNo},#{dto.hit},#{dto.ip},#{dto.memberNo},#{dto.noticeNo},#{dto.secretGubun}, sysdate) 
	</insert>
	
	<insert id="setUpdateHit">
		update ${tableName01} set hit = (hit + 1) where no = #{no}
	</insert>
	
	<insert id="setUpdateReLevel">
		update board set levelNo = (levelNo + 1) where refNo = #{dto.refNo} and levelNo > #{dto.levelNo}
	</insert>
	
	
	<select id="goView" resultType="board.model.dto.BoardDTO" >
		select * from (select b.*, (select count(*) from ${tableName01} where refNo = b.refNo and stepNo = (b.stepNo +1) and levelNo = (b.levelNo +1)) child_counter, 
		 LAG(no) OVER (ORDER BY noticeNo desc, refNo desc, levelNo asc) preNo,
		 LAG(subject) OVER (ORDER BY noticeNo desc, refNo desc, levelNo asc) preSubject, 
		 LEAD(no) OVER (ORDER BY noticeNo desc, refNo desc, levelNo asc) nxtNo, 
		 LEAD(subject) OVER (ORDER BY noticeNo desc, refNo desc, levelNo asc) nxtSubject 
		 from ${tableName01} b order by noticeNo desc, refNo desc, levelNo asc) where no = ${no}
	</select>
	
	<insert id="getUpdate">
		update board set subject = #{dto.subject}, content = #{dto.content}, email = #{dto.email} where no = #{dto.no}
	</insert>
	
	<delete id="getDelete">
		delete from board where no = #{dto.no} and passwd = #{dto.passwd}
	</delete>
	
</mapper>